<?php

namespace AppBundle\Repository;
use AppBundle\Entity\Product;
use AppBundle\Entity\ProductAvailability;

/**
 * ProductAvailabilityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductAvailabilityRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $product
     * @return null|\AppBundle\Entity\ProductAvailability
     */
    public function get(Product $product)
    {
        $qb = $this->createQueryBuilder('pa');
        $qb->where($qb->expr()->eq('pa.product', ':productId'))
            ->setParameter(':productId', $product->getId());
        $validProductPromotions = $qb->getQuery()->getOneOrNullResult();
        return $validProductPromotions;
    }

    /**
     * @param Product $product
     * @param $quantity
     * @return mixed
     */
    public function set(Product $product, $quantity){
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $q=$qb->update(ProductAvailability::class, 'p')
            ->set('p.quantity', $qb->expr()->literal($quantity))
            ->where($qb->expr()->eq('p.product', ':product'))
            ->setParameter(':product', $product)
            ->getQuery();
        $item = $q->getSingleResult();
        return $item;
    }
    /**
     * @param Product $product
     * @param $availabilityCount
     */
    public function create($product, $availabilityCount)
    {
        $entity = new ProductAvailability();
        $entity->setProduct($product);
        $entity->setQuantity($availabilityCount);
        $em = $this->getEntityManager();
        $em->persist($entity);
    }

}
